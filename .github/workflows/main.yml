---

name: Build, push and deploy image to GCP

on:
  push:
    tags:
      - '*'

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/go-game-of-life

jobs:
  build-push-image-docker-hub:
    runs-on: ubuntu-latest
    steps:
      - name: Get ref
        id: get_ref
        run: echo ::set-output name=REF::${GITHUB_REF##*/}

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Login Docker
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build image
        run: docker build -t ${{ env.DOCKER_IMAGE }}:${{ steps.get_ref.outputs.REF }} -f Dockerfile.dockerhub .

      - name: Push image with ref tag
        run: docker push ${{ env.DOCKER_IMAGE }}:${{ steps.get_ref.outputs.REF }}

      - name: Push image with latest tag
        run: docker tag ${{ env.DOCKER_IMAGE }}:${{ steps.get_ref.outputs.REF }} ${{ env.DOCKER_IMAGE }}:latest && docker push ${{ env.DOCKER_IMAGE }}:latest

  push-image-gcp:
    runs-on: ubuntu-latest
    needs:
      - build-push-image-docker-hub
    steps:
      - name: Get ref
        id: get_ref
        run: echo ::set-output name=REF::${GITHUB_REF##*/}

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Build Image
        run: docker build -t gcr.io/${{ env.DOCKER_IMAGE }}:${{ steps.get_ref.outputs.REF }} .

      - name: Push Image
        run: docker push gcr.io/${{ env.DOCKER_IMAGE }}:${{ steps.get_ref.outputs.REF }}

  deploy-gcp:
    runs-on: ubuntu-latest
    needs:
      - push-image-gcp
    steps:
      - name: Get ref
        id: get_ref
        run: echo ::set-output name=REF::${GITHUB_REF##*/}

      - name: Checkout repo
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - run: terraform init
        working-directory: ./tf
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      - run: terraform plan
        working-directory: ./tf
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}
          TF_VAR_gcp_image: ${{ env.DOCKER_IMAGE }}:${{ steps.get_ref.outputs.REF }}
          TF_VAR_gcp_max_scale: "1"

      - run: terraform apply -auto-approve
        working-directory: ./tf
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}
          TF_VAR_gcp_image: ${{ env.DOCKER_IMAGE }}:${{ steps.get_ref.outputs.REF }}
          TF_VAR_gcp_max_scale: "1"
